# OpenHands 環境構築ガイド

このドキュメントでは、OpenHands をローカル環境でスムーズに構築する手順を日本語で説明します。

## 🚀 OpenHands を始める方法

OpenHands を使用する方法は2つあります：

### 1. OpenHands Cloud（推奨・最も簡単）

**OpenHands Cloud** は完全管理されたクラウドソリューションで、最も簡単に OpenHands を始められる方法です。

**特徴：**
- 新規ユーザーには無料クレジットが提供されます（$20〜$50 - 最新情報は [公式サイト](https://app.all-hands.dev/) でご確認ください）
- GitHub/GitLab との seamless な統合
- モバイルデバイスからのアクセス対応
- コンテキスト圧縮などの最適化機能が標準搭載
- 環境構築不要で即座に利用開始可能

**利用開始：**
[app.all-hands.dev](https://app.all-hands.dev/) にアクセスして GitHub または GitLab アカウントでログインするだけです。

### 2. ローカル環境での構築

ローカル環境で OpenHands を実行したい場合や、独自の LLM と API キーを使用したい場合は、以下の手順に従ってください。

**こんな場合におすすめ：**
- プライベートな環境で実行したい
- 独自の LLM モデルを使用したい
- カスタマイズや開発を行いたい
- インターネット接続が制限された環境で使用したい

---

## ローカル環境構築手順

### 前提条件

- Git がインストールされていること
- Node.js (推奨バージョン: 16.x 以上) および pnpm がインストールされていること  
  インストール例: `npm install -g pnpm`
- （必要に応じて）Python 3.8 以上および Poetry がインストールされていること
- データベース（例: PostgreSQL, MySQL）の準備と接続情報

## リポジトリのクローン

```bash
git clone https://github.com/your-org/openhands.git
cd openhands
```

## 依存関係のインストール

### フロントエンド

```bash
cd frontend
pnpm install
```

`vite.config.js` に以下の設定を追加または確認して、0.0.0.0 からのアクセスと CORS、iframe を許可します。

```js
export default defineConfig({
  server: {
    host: '0.0.0.0',
    port: 55083,
    strictPort: true,
    cors: true,
    watch: {
      usePolling: true,
    },
  },
  preview: {
    host: '0.0.0.0',
    port: 55083,
    cors: true,
  },
  // 必要に応じて allowedHosts を 'all' に設定
  // server: { allowedHosts: 'all' },
});
```

### バックエンド

```bash
cd backend
pnpm install
```

- `cors` ミドルウェアの設定を確認し、すべてのオリジンからのリクエストを許可する場合は `cors({ origin: '*' })` を設定してください。
- 環境変数ファイル `.env` をルートディレクトリに作成し、接続情報を追加します。例:

```
DATABASE_URL=postgres://user:password@localhost:5432/openhands_dev
API_PORT=50133
```

## データベースのマイグレーション

バックエンドディレクトリで以下を実行します。

```bash
pnpm run migrate
```

（または使用している ORM に応じたコマンド）

## サーバーの起動

ルートディレクトリで以下を実行し、フロントエンドとバックエンドを並行して起動します。

```bash
pnpm run dev
```

- フロントエンド: http://localhost:55083  
- バックエンド API: http://localhost:50133

## 動作確認

ブラウザで http://localhost:55083 を開き、正常に起動することを確認します。また、バックエンド API に対しては GET /health などのエンドポイントで確認してください。

---

## 📚 追加情報

### OpenHands Cloud vs ローカル環境

| 項目 | OpenHands Cloud | ローカル環境 |
|------|----------------|------------|
| **セットアップ** | 即座に利用可能 | 環境構築が必要 |
| **コスト** | 無料クレジット付き、その後従量課金 | LLM API 料金のみ |
| **カスタマイズ** | 限定的 | 完全にカスタマイズ可能 |
| **プライバシー** | クラウド環境 | 完全にプライベート |
| **メンテナンス** | 不要 | 自己管理が必要 |

### 関連リンク

- [OpenHands 公式サイト](https://www.all-hands.dev/)
- [OpenHands Cloud](https://app.all-hands.dev/)
- [GitHub リポジトリ](https://github.com/All-Hands-AI/OpenHands)
- [公式ドキュメント](https://docs.all-hands.dev/)
- [コミュニティ Slack](https://join.slack.com/t/openhands-ai/shared_invite/zt-3847of6xi-xuYJIPa6YIPg4ElbDWbtSA)

## 🔧 Windows + Ubuntu (WSL) 環境での安定起動

Windows + Ubuntu (WSL) 環境では、特有の問題が発生することがあります。以下のトラブルシューティング手順で安定した起動を実現できます。

### 事前確認事項

```bash
# WSL2 が有効になっているか確認
wsl --status

# Docker Desktop の WSL2 統合が有効か確認
docker --version
docker ps
```

### よくある問題と解決策

#### 1. ポートバインディングエラー
**エラー例:** `ports are not available: exposing port TCP ... bind: An attempt was made to access a socket in a way forbidden by its access permissions`

**解決策:**
```bash
# カスタムポートを指定して起動
docker run -it --rm --pull=always \
    -e SANDBOX_VSCODE_PORT=41234 \
    -e SANDBOX_RUNTIME_CONTAINER_IMAGE=docker.all-hands.dev/all-hands-ai/runtime:latest \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v ~/.openhands-state:/.openhands-state \
    -p 3000:3000 \
    -p 41234:41234 \
    --add-host host.docker.internal:host-gateway \
    --name openhands-app \
    docker.all-hands.dev/all-hands-ai/openhands:latest
```

#### 2. Docker 接続エラー
**エラー例:** `Launch docker client failed`

**解決策（順番に試してください）:**
1. **Docker Desktop の再起動**
   ```bash
   # PowerShell で実行
   wsl --shutdown
   # Docker Desktop を再起動
   ```

2. **Docker Desktop 設定の確認**
   - `Settings > Advanced > Allow the default Docker socket to be used` を有効化
   - `Settings > Resources > WSL Integration` で Ubuntu ディストリビューションを有効化
   - `Settings > Resources > Network > Enable host networking` を有効化（必要に応じて）

3. **WSL2 の確認と修復**
   ```bash
   # PowerShell で実行
   wsl --set-default-version 2
   wsl --set-version Ubuntu 2
   ```

#### 3. 権限エラー
**エラー例:** `Permission denied` または `~/.openhands-state` 関連エラー

**解決策:**
```bash
# ディレクトリの所有者を変更
sudo chown $USER:$USER ~/.openhands-state

# または権限を変更
sudo chmod 777 ~/.openhands-state

# または完全にリセット（設定が失われます）
rm -rf ~/.openhands-state
```

#### 4. Docker イメージビルドエラー

**解決策:**
```bash
# Docker のクリーンアップ
docker system prune -a

# WSL2 のメモリ制限を設定（C:\Users\<username>\.wslconfig）
[wsl2]
memory=8GB
processors=4
swap=2GB
```

### 安定起動のための推奨設定

#### 1. .wslconfig ファイルの作成
`C:\Users\<username>\.wslconfig` に以下を追加：

```ini
[wsl2]
memory=8GB
processors=4
swap=2GB
localhostForwarding=true
```

#### 2. 起動スクリプトの作成
安定した起動のためのスクリプト例：

```bash
#!/bin/bash
# start-openhands.sh

# Docker の状態確認
if ! docker ps >/dev/null 2>&1; then
    echo "Docker が起動していません。Docker Desktop を起動してください。"
    exit 1
fi

# 既存のコンテナを停止・削除
docker stop openhands-app 2>/dev/null || true
docker rm openhands-app 2>/dev/null || true

# OpenHands を起動
docker run -it --rm --pull=always \
    -e SANDBOX_RUNTIME_CONTAINER_IMAGE=docker.all-hands.dev/all-hands-ai/runtime:latest \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v ~/.openhands-state:/.openhands-state \
    -p 3000:3000 \
    --add-host host.docker.internal:host-gateway \
    --name openhands-app \
    docker.all-hands.dev/all-hands-ai/openhands:latest
```

#### 3. 毎日の起動ルーチン
調子が悪い場合の復旧手順：

```bash
# 1. WSL を完全にシャットダウン
wsl --shutdown

# 2. Docker Desktop を再起動

# 3. WSL Ubuntu を起動
wsl -d Ubuntu

# 4. Docker の動作確認
docker ps

# 5. OpenHands を起動
./start-openhands.sh
```

### トラブルシューティングのヒント

- **定期的な再起動**: WSL2 は長時間使用すると不安定になることがあります
- **リソース監視**: Windows タスクマネージャーでメモリ使用量を確認
- **ログの確認**: `docker logs openhands-app` でエラーの詳細を確認
- **ネットワーク問題**: VPN や企業ファイアウォールが影響することがあります

---

これらの手順に従うことで、OpenHands をスムーズにローカル環境で構築・起動できます。問題が発生した場合は、[GitHub Issues](https://github.com/All-Hands-AI/OpenHands/issues) を作成してください。

